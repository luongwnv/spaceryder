version: '3.8'

services:
    postgres:
        image: postgres:16
        container_name: spaceryder_postgres
        ports:
            - '5432:5432'
        environment:
            POSTGRES_USER: user123
            POSTGRES_PASSWORD: password123
            POSTGRES_DB: spaceryder
        volumes:
            - pgdata:/var/lib/postgresql/data
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U user123 -d spaceryder']
            interval: 5s
            timeout: 5s
            retries: 5

    redis:
        image: redis:7
        container_name: spaceryder_redis
        ports:
            - '6379:6379'
        volumes:
            - redisdata:/data
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']
            interval: 5s
            timeout: 3s
            retries: 5

    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: spaceryder_be:latest
        container_name: spaceryder_be
        ports:
            - '3000:3000'
        env_file:
            - .env
        environment:
            DB_HOST: postgres
            DB_PORT: 5432
            DB_USERNAME: user123
            DB_USER: user123
            DB_PASSWORD: password123
            DB_NAME: spaceryder
            REDIS_HOST: redis
            REDIS_PORT: 6379
            PORT: 3000
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy

volumes:
    pgdata:
    redisdata:
